replicas: 2

# Ensure it can reach the kubelet directly (RKE2/K3s)
hostNetwork: true
dnsPolicy: ClusterFirstWithHostNet

args:
  - --secure-port=4443
  - --cert-dir=/tmp
  - --kubelet-insecure-tls
  - --kubelet-use-node-status-port
  - --kubelet-preferred-address-types=InternalIP,Hostname
  - --metric-resolution=15s

# Matches APIService -> Service -> container port
service:
  port: 443
  targetPort: 4443
  type: ClusterIP

# Ensure APIService talks to service, not podIP
apiService:
  insecureSkipTLSVerify: true
  port: 443

# Set containerPort explicitly to match probes and service
containerPort: 4443

livenessProbe:
  httpGet:
    path: /livez
    port: 4443
    scheme: HTTPS
  initialDelaySeconds: 15
  periodSeconds: 10
  timeoutSeconds: 3
  failureThreshold: 3

readinessProbe:
  httpGet:
    path: /readyz
    port: 4443
    scheme: HTTPS
  initialDelaySeconds: 30
  periodSeconds: 10
  timeoutSeconds: 3
  failureThreshold: 3

resources:
  requests:
    cpu: 100m
    memory: 200Mi
  limits:
    cpu: 250m
    memory: 400Mi

priorityClassName: system-cluster-critical

nodeSelector:
  kubernetes.io/os: linux

tolerations:
  - key: "node-role.kubernetes.io/master"
    operator: "Exists"
    effect: "NoSchedule"
  - operator: "Exists"
