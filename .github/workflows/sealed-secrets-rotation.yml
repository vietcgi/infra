name: Rotate Sealed Secrets Keys

on:
  schedule:
    # Run at 2am UTC every Sunday
    - cron: '0 2 * * 0'
  workflow_dispatch:
    inputs:
      force:
        description: 'Force rotation even if not expired'
        required: false
        default: 'false'

jobs:
  rotate-keys:
    name: Rotate Sealed Secrets Keys
    runs-on: ubuntu-latest
    
    # Only run on main branch
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
    
    - name: Set up kubectl
      uses: azure/setup-kubectl@v3
      with:
        version: 'v1.26.0'  # Match your cluster version
    
    - name: Set up jq
      run: sudo apt-get update && sudo apt-get install -y jq
    
    - name: Configure kubeconfig
      run: |
        mkdir -p $HOME/.kube
        echo "${{ secrets.KUBE_CONFIG }}" > $HOME/.kube/config
        chmod 600 $HOME/.kube/config
    
    - name: Check certificate expiration
      id: check-expiry
      run: |
        DAYS_LEFT=$(./scripts/manage-sealed-secrets.sh check-expiry 2>&1 || true)
        echo "DAYS_LEFT=$DAYS_LEFT" >> $GITHUB_ENV
        
        if [[ "$DAYS_LEFT" == *"ERROR"* ]]; then
          echo "NEEDS_ROTATION=true" >> $GITHUB_ENV
        elif [[ "${{ github.event.inputs.force }}" == "true" ]]; then
          echo "NEEDS_ROTATION=true" >> $GITHUB_ENV
        else
          echo "NEEDS_ROTATION=false" >> $GITHUB_ENV
        fi
    
    - name: Rotate keys if needed
      if: env.NEEDS_ROTATION == 'true'
      run: |
        # Create backup before rotation
        ./scripts/manage-sealed-secrets.sh backup
        
        # Rotate the keys
        ./scripts/manage-sealed-secrets.sh rotate
        
        # Commit and push changes
        git config --global user.name "GitHub Actions"
        git config --global user.email "actions@github.com"
        
        git add .
        git diff-index --quiet HEAD || git commit -m "chore: rotate sealed secrets keys"
        git push
        
        # Create a GitHub release with the backup
        BACKUP_FILE="sealed-secrets-backup-$(date +%Y%m%d-%H%M%S).tar.gz"
        tar -czf "$BACKUP_FILE" -C backups .
        
        gh release create "sealed-secrets-backup-$(date +%Y%m%d)" \
          --title "Sealed Secrets Backup $(date +%Y-%m-%d)" \
          --notes "Automated backup of sealed secrets keys" \
          "$BACKUP_FILE"
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Skip rotation (not needed)
      if: env.NEEDS_ROTATION == 'false'
      run: |
        echo "Key rotation not needed. Certificate is valid for $DAYS_LEFT days."
        echo "Set 'force: true' to force rotation."
