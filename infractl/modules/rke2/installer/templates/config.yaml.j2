# =============================================
# RKE2 Node Configuration
# Generated by infractl
# Node: {{ node.name }} ({{ node.ip }})
# Role: {{ 'Server' if is_server else 'Agent' }}{{ ' (Bootstrap)' if is_bootstrap else '' }}
# =============================================

# Cluster authentication token
token: {{ cluster_token }}

# Network configuration
node-ip: {{ node.ip }}
node-name: {{ node.name }}
node-external-ip: {{ node.ip }}

# Kubeconfig settings
write-kubeconfig-mode: '0644'
write-kubeconfig: '/etc/rancher/rke2/rke2.yaml'

# Cluster configuration
cluster-cidr: 10.42.0.0/16
service-cidr: 10.43.0.0/16
cluster-dns: 10.43.0.10
cluster-domain: cluster.local

# Kubelet configuration
kubelet-arg:
  - cloud-provider=external
  - read-only-port=0
  - protect-kernel-defaults=true
  - fail-swap-on=false

# Kube-Proxy configuration
kube-proxy-arg:
  - metrics-bind-address=0.0.0.0
  - proxy-mode=ipvs
  - ipvs-scheduler=rr

{% if is_server %}
# Server configuration
tls-san:
  - {{ node.ip }}
  - 127.0.0.1
  - localhost
  - '::1'
  - 0.0.0.0

# API server arguments
kube-apiserver-arg:
  - cloud-provider=external
  - advertise-address={{ node.ip }}

# Controller manager arguments
kube-controller-manager-arg:
  - node-monitor-grace-period=40s
  - node-monitor-period=5s
  - pod-eviction-timeout=5m0s
  - terminated-pod-gc-threshold=1000
  - use-service-account-credentials=true

# Node taints for control plane nodes
node-taint:
  - CriticalAddonsOnly=true:NoExecute

{% if is_bootstrap %}
# Bootstrap node configuration
cluster-init: true
{% else %}
# Join existing cluster
server: https://{{ bootstrap_ip }}:9345
{% endif %}

{% endif %}

# Disable RKE2 built-in components
disable:
  - rke2-canal
  - rke2-cilium
  - rke2-coredns
  - rke2-ingress-nginx
  - rke2-metrics-server
  - rke2-snapshot-controller
  - rke2-snapshot-controller-crd
  - rke2-snapshot-validation-webhook
